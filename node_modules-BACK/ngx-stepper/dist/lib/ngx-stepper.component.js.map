{"version":3,"sources":["../../src/lib/ngx-stepper.component.ts"],"names":[],"mappings":"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","file":"ngx-stepper.component.js","sourceRoot":"","sourcesContent":["import {\r\n    Component,\r\n    Input,\r\n    OnInit,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport {\r\n    StepperOptions\r\n} from './ngx-stepper.model';\r\n\r\nimport {\r\n    NgxStepComponent\r\n} from './ngx-step.component';\r\n\r\nimport {\r\n    NgxStepperService\r\n} from './ngx-stepper.service';\r\n\r\n\r\nexport class NgxStepperComponent implements OnInit {\r\n    \r\n    public options: StepperOptions = {\r\n        mobileStepText: true,\r\n        linear: true,\r\n        vertical: false,\r\n        alternative: true,\r\n        labelStep: 'Step',\r\n        labelOf: 'of',\r\n        enableSvgIcon: false\r\n    };\r\n\r\n    public steps: NgxStepComponent[] = [];\r\n    public currentStep = 0;\r\n\r\n    public hasFeedback: boolean;\r\n    public feedbackMessage: string;\r\n\r\n    constructor(private _ngxStepperService: NgxStepperService) {\r\n        this._ngxStepperService.isInitStepCmp.subscribe((step: NgxStepComponent) => {\r\n            step.stepNumber = this.addStep(step);\r\n        });\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (this.options.mobileStepText === undefined) {\r\n            this.options.mobileStepText = true;\r\n        }\r\n        if (this.options.linear === undefined) {\r\n            this.options.linear = true;\r\n        }\r\n        if (this.options.alternative === undefined) {\r\n            this.options.alternative = true;\r\n        }\r\n        this._ngxStepperService.isInitStepperCmp.next(this);\r\n    }\r\n\r\n    /**\r\n     * Register component step to this stepper.\r\n     *\r\n     * @param {StepCtrl} step The step to add.\r\n     * @returns number - The step number.\r\n     */\r\n    public addStep(step: NgxStepComponent) {\r\n        return this.steps.push(step) - 1;\r\n    }\r\n\r\n    /**\r\n     * Complete the current step and move one to the next.\r\n     * Using this method on editable steps (in linear stepper)\r\n     * it will search by the next step without \"completed\" state to move.\r\n     * When invoked it dispatch the event onstepcomplete to the step element.\r\n     *\r\n     * @returns boolean - True if move and false if not move (e.g. On the last step)\r\n     */\r\n    public next() {\r\n        if (this.currentStep < this.steps.length) {\r\n            this.clearError();\r\n            this.currentStep++;\r\n            this.clearFeedback();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Move to the previous step without change the state of current step.\r\n     * Using this method in linear stepper it will check if previous step is editable to move.\r\n     *\r\n     * @returns boolean - True if move and false if not move (e.g. On the first step)\r\n     */\r\n    public back() {\r\n        if (this.currentStep > 0) {\r\n            this.clearError();\r\n            this.currentStep--;\r\n            this.clearFeedback();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Move to the next step without change the state of current step.\r\n     * This method works only in optional steps.\r\n     *\r\n     * @returns boolean - True if move and false if not move (e.g. On non-optional step)\r\n     */\r\n    public skip() {\r\n        let step = this.steps[this.currentStep];\r\n        if (!step) {\r\n            return;\r\n        }\r\n        if (step.optional) {\r\n            this.currentStep++;\r\n            this.clearFeedback();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    /**\r\n     * Defines the current step state to \"error\" and shows the message parameter on\r\n     * title message element.When invoked it dispatch the event onsteperror to the step element.\r\n     *\r\n     * @param {string} message The error message\r\n     */\r\n    public error(message: string) {\r\n        let step = this.steps[this.currentStep];\r\n        if (!step) {\r\n            return;\r\n        }\r\n        step.hasError = true;\r\n        step.message = message;\r\n        this.clearFeedback();\r\n    }\r\n\r\n    /**\r\n     * Defines the current step state to \"normal\" and removes the message parameter on\r\n     * title message element.\r\n     */\r\n    public clearError() {\r\n        let step = this.steps[this.currentStep];\r\n        if (!step) {\r\n            return;\r\n        }\r\n        step.hasError = false;\r\n    }\r\n\r\n    /**\r\n     * Move \"active\" to specified step id parameter.\r\n     * The id used as reference is the integer number shown on the label of each step (e.g. 2).\r\n     *\r\n     * @param {number} stepNumber (description)\r\n     * @returns boolean - True if move and false if not move (e.g. On id not found)\r\n     */\r\n    public goto(stepNumber: number) {\r\n        if (stepNumber < this.steps.length) {\r\n            this.currentStep = stepNumber;\r\n            this.clearFeedback();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Shows a feedback message and a loading indicador.\r\n     *\r\n     * @param {string} [message] The feedbackMessage\r\n     */\r\n    public showFeedback(message?: string) {\r\n        this.hasFeedback = true;\r\n        this.feedbackMessage = message;\r\n    }\r\n\r\n    /**\r\n     * Removes the feedback.\r\n     */\r\n    public clearFeedback() {\r\n        this.hasFeedback = false;\r\n    }\r\n\r\n    public isCompleted(stepNumber: number) {\r\n        return this.options.linear && stepNumber < this.currentStep;\r\n    };\r\n\r\n    public isActiveStep(step: NgxStepComponent): boolean {\r\n        return this.steps.indexOf(step) === this.currentStep;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'ngx-stepper',\r\n    template: `\r\n        <div class=\"mat-steppers flex\" [ngClass]=\"{'mat-steppers-linear': options.linear,\r\n                                              'mat-steppers-alternative': options.alternative,\r\n                                              'mat-steppers-vertical': options.vertical,\r\n                                              'mat-steppers-mobile-step-text': options.mobileStepText,\r\n                                              'mat-steppers-has-feedback': hasFeedback}\">\r\n            <div class=\"mat-steppers-header-region\">\r\n                <div class=\"mat-steppers-header mat-steppers-horizontal mat-whiteframe-1dp\">\r\n                    <button class=\"mat-stepper-indicator\"\r\n                            *ngFor=\"let step of steps; let stepNumber = index\"\r\n                            [ngClass]=\"{'mat-active': stepNumber === currentStep,\r\n                              'mat-completed': isCompleted(stepNumber),\r\n                              'mat-error': step.hasError,\r\n                              'mat-stepper-optional': step.optional || step.hasError}\"\r\n                            (click)=\"goto(stepNumber)\"\r\n                            [disabled]=\"options.linear || stepNumber === currentStep\">\r\n                        <div class=\"mat-stepper-indicator-wrapper\">\r\n                            <div class=\"mat-stepper-number\"\r\n                                 [ngClass]=\"{'mat-stepper-done': isCompleted(stepNumber)}\"\r\n                                 *ngIf=\"!step.hasError\">\r\n                                <span *ngIf=\"!isCompleted(stepNumber)\">{{ stepNumber + 1 }}</span>\r\n                                <mat-icon class=\"mat-stepper-icon svg-icon\" svgIcon=\"step-done\"\r\n                                          *ngIf=\"isCompleted(stepNumber) && options.enableSvgIcon\"></mat-icon>\r\n                                <mat-icon class=\"mat-stepper-icon\"\r\n                                          *ngIf=\"isCompleted(stepNumber) && !options.enableSvgIcon\">done\r\n                                </mat-icon>\r\n                            </div>\r\n                            <div class=\"mat-stepper-error-indicator\" *ngIf=\"step.hasError\">\r\n                                <mat-icon *ngIf=\"options.enableSvgIcon\" svgIcon=\"step-warning\"></mat-icon>\r\n                                <mat-icon *ngIf=\"!options.enableSvgIcon\">warning</mat-icon>\r\n                            </div>\r\n                            <div class=\"mat-stepper-title\">\r\n                                <span>{{ step.label }}</span>\r\n                                <small *ngIf=\"step.optional && !step.hasError\">{{ step.optional }}</small>\r\n                                <small class=\"mat-stepper-error-message\" *ngIf=\"step.hasError\">\r\n                                    {{ step.message }}\r\n                                </small>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n                <div class=\"mat-steppers-mobile-header\">\r\n                    <mat-toolbar class=\"mat-whiteframe-1dp block\"\r\n                                 style=\"background: #f6f6f6 !important; color: #202020 !important;\">\r\n                        <div class=\"mat-toolbar-tools\">\r\n                            <h3>\r\n                                <span>{{options.labelStep || 'Step'}} {{currentStep + 1}} {{options.labelOf || 'of'}} {{steps.length}}</span>\r\n                            </h3>\r\n                        </div>\r\n                    </mat-toolbar>\r\n                </div>\r\n                <div class=\"mat-stepper-feedback-message\" *ngIf=\"hasFeedback\">\r\n                    {{feedbackMessage}}\r\n                </div>\r\n            </div>\r\n            <div class=\"mat-steppers-content\">\r\n                <ng-content select=\"ngx-step\"></ng-content>\r\n            </div>\r\n            <div class=\"mat-steppers-overlay\"></div>\r\n        </div>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None,\r\n    styles: [\r\n        '.mat-whiteframe-1dp,.mat-whiteframe-z1{box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12)}.svg-icon{width:16px!important;height:16px!important}.mat-stepper-error-indicator{height:24px!important}.mat-stepper{display:block}.mat-steppers-header,.mat-steppers-mobile-header,.mat-step-actions{flex:0 0 auto;box-sizing:border-box}.mat-steppers-header-region{z-index:1}@media (max-width: 599px){.mat-stepper{display:flex;flex-direction:row}.mat-stepper > div{min-width:0;flex:1}.mat-steppers-content{min-height:0;display:flex;flex-direction:column}.mat-step.mat-active{min-height:0;flex:1;display:flex;flex-direction:column}.mat-step.mat-active .mat-stepper{display:flex;flex-direction:column;flex:1;min-height:0}.mat-steppers-scope{flex:1}.mat-step-body{flex:1}}.mat-steppers{display:flex;flex-flow:column}.mat-steppers:not(.mat-steppers-linear) .mat-stepper-indicator:not(.mat-active):not(.mat-completed):hover,.mat-steppers:not(.mat-steppers-linear) .mat-stepper-indicator.mat-editable.mat-completed:hover{cursor:pointer}.mat-steppers:not(.mat-steppers-linear) .mat-stepper-indicator:not(.mat-active):not(.mat-completed):hover,.mat-steppers:not(.mat-steppers-linear) .mat-stepper-indicator.mat-editable.mat-completed:hover,.mat-steppers:not(.mat-steppers-linear) .mat-stepper-indicator:not(.mat-active):not(.mat-completed):hover .mat-stepper-indicator-wrapper,.mat-steppers:not(.mat-steppers-linear) .mat-stepper-indicator.mat-editable.mat-completed:hover .mat-stepper-indicator-wrapper{background-color:#f6f6f6}.mat-steppers-header{margin:0;display:flex;flex-flow:row nowrap;border-radius:0;align-items:flex-start}.mat-steppers-horizontal .mat-stepper-indicator{min-height:72px}.mat-steppers-horizontal .mat-stepper-indicator:first-child .mat-stepper-indicator-wrapper{padding-left:16px}.mat-steppers-horizontal .mat-stepper-indicator:after{width:999em;height:1px;margin-top:-1px;position:absolute;top:50%;left:0;z-index:1;background-color:#e8e8e8;content:\" \"}.mat-stepper-indicator{margin:0;padding:0 16px;position:relative;display:flex;flex:1 0 auto;align-content:flex-start;align-items:flex-start;overflow:hidden;cursor:default;background:none;border:none;transition:all .4s cubic-bezier(0.25,0.8,0.25,1)}.mat-stepper-indicator:focus{outline:none}.mat-stepper-indicator.mat-completed .mat-stepper-number,.mat-stepper-indicator.mat-active .mat-stepper-number{background-color:#2196f3}.mat-stepper-indicator.mat-completed .mat-stepper-title,.mat-stepper-indicator.mat-active .mat-stepper-title{color:rgba(0,0,0,.87)}.mat-stepper-indicator.mat-active .mat-stepper-title,.mat-stepper-indicator.mat-editable .mat-stepper-title{font-weight:500}.mat-stepper-indicator.mat-error .mat-stepper-title{color:#f44336}.mat-stepper-indicator:first-child{padding-left:0}.mat-stepper-indicator:last-child{padding-right:0;justify-content:flex-end}.mat-stepper-indicator:last-child .mat-stepper-indicator-wrapper{padding-right:24px}.mat-stepper-indicator .mat-ripple-container{z-index:3}.mat-stepper-indicator-wrapper{padding:0 8px 0 0;position:relative;z-index:2;display:flex;align-items:center;align-content:center;background-color:#fff;transition:all .4s cubic-bezier(0.25,0.8,0.25,1)}.mat-stepper-number{width:24px;height:24px;margin:0 8px;border-radius:24px;background-color:#bdbdbd;transition:all .4s cubic-bezier(0.25,0.8,0.25,1);color:#fff;font-size:12px;line-height:24px;text-align:center}.mat-stepper-number.ng-hide{transition:none}.mat-error .mat-stepper-error-indicator{margin:0 8px;background-color:#fff}.mat-error .mat-stepper-error-indicator mat-icon{color:#f44336}.mat-error .mat-stepper-error-message{color:#f44336;font-weight:400}.mat-stepper-done{background-color:#5cb85c!important}.mat-stepper-icon{width:18px;height:18px;position:relative;top:2.5px;color:#fff;font-size:18px;font-weight:700}.mat-stepper-icon.mat-stepper-icon-edit{width:14px;height:14px;font-size:14px;font-weight:400}.mat-stepper-title{display:flex;flex-flow:column nowrap;position:relative;transition:all .4s cubic-bezier(0.25,0.8,0.25,1);font-size:14px;line-height:24px}.mat-steppers-content{position:relative;flex:1}.mat-stepper{box-sizing:border-box}.mat-stepper.mat-active{position:relative;pointer-events:auto}.mat-steppers-actions{display:flex}.mat-stepper-optional .mat-stepper-title{text-align:left;white-space:nowrap}.mat-stepper-optional .mat-stepper-title small:not(.mat-stepper-error-message){color:rgba(0,0,0,.54)}.mat-stepper-optional .mat-stepper-title small{transition:all .4s cubic-bezier(0.25,0.8,0.25,1);font-size:12px;line-height:1em}.mat-steppers-linear .mat-stepper-indicator{cursor:default}.mat-steppers-linear .mat-stepper-indicator.mat-editable.mat-completed:hover{cursor:pointer}.mat-steppers-linear .mat-stepper-indicator.mat-editable.mat-completed:hover,.mat-steppers-linear .mat-stepper-indicator.mat-editable.mat-completed:hover .mat-stepper-indicator-wrapper{background-color:#f6f6f6}.mat-steppers-linear .mat-stepper-indicator.mat-editable.mat-completed:hover .mat-stepper-number:before,.mat-steppers-linear .mat-stepper-indicator.mat-editable.mat-completed:hover .mat-stepper-number:after{background-color:#f6f6f6}.mat-steppers-linear .mat-stepper-title{color:rgba(0,0,0,.26)}.mat-steppers-linear .mat-stepper-title small:not(.mat-stepper-error-message){color:rgba(0,0,0,.26)}.mat-steppers-alternative:not(.mat-steppers-linear) .mat-stepper-indicator:not(.mat-active):not(.mat-completed):hover .mat-stepper-indicator-wrapper{background:none}.mat-steppers-alternative:not(.mat-steppers-linear) .mat-stepper-indicator:not(.mat-active):not(.mat-completed):hover .mat-stepper-number:before,.mat-steppers-alternative:not(.mat-steppers-linear) .mat-stepper-indicator:not(.mat-active):not(.mat-completed):hover .mat-stepper-number:after{background-color:#f6f6f6}.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-indicator{min-height:104px;padding:24px 16px;flex:1;justify-content:center}.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-indicator .mat-stepper-indicator-wrapper{padding:0}.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-indicator:first-child{padding-left:24px}.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-indicator:first-child:after{left:50%}.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-indicator:last-child{padding-right:24px}.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-indicator:last-child:after{right:50%;left:auto}.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-indicator:after{margin-top:0;top:36px}.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-indicator-wrapper{padding:0 16px;min-height:50px;flex-flow:column nowrap;background:none}.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-number,.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-error-indicator{position:relative}.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-number:before,.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-error-indicator:before,.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-number:after,.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-error-indicator:after{width:8px;position:absolute;top:0;bottom:0;background-color:#fff;transition:all .4s cubic-bezier(0.25,0.8,0.25,1);content:\" \"}.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-number:before,.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-error-indicator:before{left:-8px}.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-number:after,.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-error-indicator:after{right:-8px}.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-title{margin-top:16px;line-height:18px;text-align:center}.mat-steppers-alternative .mat-steppers-horizontal .mat-stepper-title small{text-align:center}.mat-steppers:not(.mat-steppers-vertical) .mat-steppers-header.mat-steppers-vertical{display:none}.mat-steppers-vertical .mat-stepper{padding:8px 24px}.mat-steppers-vertical .mat-steppers-scope{margin-left:20px;border-left:1px solid #e8e8e8;padding-left:20px}.mat-steppers-vertical .mat-steppers-header.mat-steppers-horizontal{display:none}.mat-steppers-mobile-header,.mat-stepper-feedback-message{display:none}@media (max-width: 599px){.mat-steppers-mobile-step-text:not(.mat-steppers-vertical) .mat-stepper{padding:0}.mat-steppers-mobile-step-text:not(.mat-steppers-vertical) .mat-steppers-mobile-header{display:block}.mat-steppers-mobile-step-text:not(.mat-steppers-vertical) .mat-stepper-feedback-message{display:flex}.mat-steppers-mobile-step-text:not(.mat-steppers-vertical) .mat-steppers-header.mat-steppers-horizontal{display:none}.mat-steppers-mobile-step-text:not(.mat-steppers-vertical) .mat-step-actions{background:#f6f6f6!important;color:#202020!important;flex-direction:row;box-sizing:border-box;display:flex;align-content:stretch;align-items:stretch;justify-content:space-between;box-shadow:rgba(0,0,0,0.2) 0 1px 3px 0,rgba(0,0,0,0.137255) 0 1px 1px 0,rgba(0,0,0,0.117647) 0 2px 1px -1px}}.mat-steppers-header-region{position:relative}.mat-stepper-feedback-message{position:absolute;top:0;left:0;bottom:0;width:100%;background-color:#fff;align-items:center;padding-left:10px;z-index:2;box-sizing:border-box}.mat-steppers{position:relative}.mat-step-body{position:relative;overflow:auto;display:flex;flex-direction:column}.mat-step-body-loading{display:none}.mat-steppers-has-feedback .mat-stepper-feedback-message{display:flex}.mat-steppers-has-feedback .mat-steppers-overlay{position:absolute;top:0;left:0;bottom:0;width:100%;z-index:10}.mat-steppers-has-feedback .mat-step-body-overlay{position:absolute;top:0;left:0;bottom:0;width:100%;z-index:11;opacity:.75;background-color:#fff}.mat-steppers-has-feedback .mat-step-body-loading{display:flex;position:absolute;top:0;left:0;bottom:0;width:100%;z-index:12;flex-direction:column;box-sizing:border-box;align-items:center;align-content:center;max-width:100%;justify-content:center}'\r\n    ],\r\n    exportAs: 'stepper',\r\n    providers: [NgxStepperService]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgxStepperService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}