[{"__symbolic":"module","version":3,"metadata":{"NgxStepComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"ngx-step","template":"\n    <div class=\"mat-step\" [ngClass]=\"{ 'mat-active': isActive() }\">\n      <div class=\"mat-stepper\" [ngClass]=\"{ 'mat-active': isActive() }\">\n        <div class=\"mat-steppers-header mat-steppers-vertical\">\n          <button class=\"mat-stepper-indicator\"\n                  [ngClass]=\"{'mat-active': stepNumber === stepper.currentStep,\n                              'mat-completed': stepper.isCompleted(stepNumber),\n                              'mat-error': hasError,\n                              'mat-stepper-optional': optional || hasError}\"\n                  (click)=\"stepper.goto(stepNumber)\"\n                  [disabled]=\"stepper.options.linear || stepNumber === stepper.currentStep\">\n            <div class=\"mat-stepper-indicator-wrapper\">\n              <div class=\"mat-stepper-number\" *ngIf=\"!hasError\"\n                   [ngClass]=\"{'mat-stepper-done': stepper.isCompleted(stepNumber)}\">\n                <span *ngIf=\"!stepper.isCompleted(stepNumber)\">{{ stepNumber + 1 }}</span>\n                <mat-icon class=\"mat-stepper-icon svg-icon\" svgIcon=\"step-done\"\n                         *ngIf=\"stepper.isCompleted(stepNumber) && stepper.options.enableSvgIcon\"></mat-icon>\n                <mat-icon class=\"mat-stepper-icon\"\n                         *ngIf=\"stepper.isCompleted(stepNumber) && !stepper.options.enableSvgIcon\">done</mat-icon>\n              </div>\n              <div class=\"mat-stepper-error-indicator\" *ngIf=\"hasError\">\n                <mat-icon *ngIf=\"stepper.options.enableSvgIcon\" svgIcon=\"step-warning\"></mat-icon>\n                <mat-icon *ngIf=\"!stepper.options.enableSvgIcon\">warning</mat-icon>\n              </div>\n\n              <div class=\"mat-stepper-title\">\n                <span>{{ label }}</span>\n                <small *ngIf=\"optional && !hasError\">{{ optional }}</small>\n                <small class=\"mat-stepper-error-message\" *ngIf=\"hasError\">\n                  {{ message }}\n                </small>\n              </div>\n            </div>\n          </button>\n          <div [hidden]=\"!stepper.hasFeedback\"></div>\n          <!--<div class=\"mat-stepper-feedback-message\" [hidden]=\"!stepper.hasFeedback\">-->\n          <!--{{stepper.feedbackMessage}}-->\n          <!--</div>-->\n        </div>\n        <div class=\"mat-steppers-scope\" [hidden]=\"!isActive()\">\n          <ng-content select=\"ngx-step-body\"></ng-content>\n          <ng-content select=\"ngx-step-actions\"></ng-content>\n        </div>\n      </div>\n    </div>\n  "}]}],"members":{"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"optional":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"./ngx-stepper.service","name":"NgxStepperService"}]}],"ngOnInit":[{"__symbolic":"method"}],"isActive":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"NgxStepComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"ngx-step","template":"\n    <div class=\"mat-step\" [ngClass]=\"{ 'mat-active': isActive() }\">\n      <div class=\"mat-stepper\" [ngClass]=\"{ 'mat-active': isActive() }\">\n        <div class=\"mat-steppers-header mat-steppers-vertical\">\n          <button class=\"mat-stepper-indicator\"\n                  [ngClass]=\"{'mat-active': stepNumber === stepper.currentStep,\n                              'mat-completed': stepper.isCompleted(stepNumber),\n                              'mat-error': hasError,\n                              'mat-stepper-optional': optional || hasError}\"\n                  (click)=\"stepper.goto(stepNumber)\"\n                  [disabled]=\"stepper.options.linear || stepNumber === stepper.currentStep\">\n            <div class=\"mat-stepper-indicator-wrapper\">\n              <div class=\"mat-stepper-number\" *ngIf=\"!hasError\"\n                   [ngClass]=\"{'mat-stepper-done': stepper.isCompleted(stepNumber)}\">\n                <span *ngIf=\"!stepper.isCompleted(stepNumber)\">{{ stepNumber + 1 }}</span>\n                <mat-icon class=\"mat-stepper-icon svg-icon\" svgIcon=\"step-done\"\n                         *ngIf=\"stepper.isCompleted(stepNumber) && stepper.options.enableSvgIcon\"></mat-icon>\n                <mat-icon class=\"mat-stepper-icon\"\n                         *ngIf=\"stepper.isCompleted(stepNumber) && !stepper.options.enableSvgIcon\">done</mat-icon>\n              </div>\n              <div class=\"mat-stepper-error-indicator\" *ngIf=\"hasError\">\n                <mat-icon *ngIf=\"stepper.options.enableSvgIcon\" svgIcon=\"step-warning\"></mat-icon>\n                <mat-icon *ngIf=\"!stepper.options.enableSvgIcon\">warning</mat-icon>\n              </div>\n\n              <div class=\"mat-stepper-title\">\n                <span>{{ label }}</span>\n                <small *ngIf=\"optional && !hasError\">{{ optional }}</small>\n                <small class=\"mat-stepper-error-message\" *ngIf=\"hasError\">\n                  {{ message }}\n                </small>\n              </div>\n            </div>\n          </button>\n          <div [hidden]=\"!stepper.hasFeedback\"></div>\n          <!--<div class=\"mat-stepper-feedback-message\" [hidden]=\"!stepper.hasFeedback\">-->\n          <!--{{stepper.feedbackMessage}}-->\n          <!--</div>-->\n        </div>\n        <div class=\"mat-steppers-scope\" [hidden]=\"!isActive()\">\n          <ng-content select=\"ngx-step-body\"></ng-content>\n          <ng-content select=\"ngx-step-actions\"></ng-content>\n        </div>\n      </div>\n    </div>\n  "}]}],"members":{"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"optional":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"./ngx-stepper.service","name":"NgxStepperService"}]}],"ngOnInit":[{"__symbolic":"method"}],"isActive":[{"__symbolic":"method"}]}}}}]