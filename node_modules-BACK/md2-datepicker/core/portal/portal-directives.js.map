{"version":3,"sources":["core/portal/portal-directives.ts"],"names":[],"mappings":"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","file":"portal-directives.js","sourcesContent":["import {\r\n    NgModule,\r\n    ModuleWithProviders,\r\n    ComponentRef,\r\n    Directive,\r\n    TemplateRef,\r\n    ComponentFactoryResolver,\r\n    ViewContainerRef,\r\n    OnDestroy\r\n} from '@angular/core';\r\nimport {Portal, TemplatePortal, ComponentPortal, BasePortalHost} from './portal';\r\n\r\n\r\n/**\r\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\r\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\r\n *\r\n * Usage:\r\n * <template portal #greeting>\r\n *   <p> Hello {{name}} </p>\r\n * </template>\r\n */\r\n@Directive({\r\n  selector: '[portal]',\r\n  exportAs: 'portal',\r\n})\r\nexport class TemplatePortalDirective extends TemplatePortal {\r\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\r\n    super(templateRef, viewContainerRef);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Directive version of a PortalHost. Because the directive *is* a PortalHost, portals can be\r\n * directly attached to it, enabling declarative use.\r\n *\r\n * Usage:\r\n * <template [portalHost]=\"greeting\"></template>\r\n */\r\n@Directive({\r\n  selector: '[portalHost]',\r\n  inputs: ['portal: portalHost']\r\n})\r\nexport class PortalHostDirective extends BasePortalHost implements OnDestroy {\r\n  /** The attached portal. */\r\n  private _portal: Portal<any>;\r\n\r\n  constructor(\r\n      private _componentFactoryResolver: ComponentFactoryResolver,\r\n      private _viewContainerRef: ViewContainerRef) {\r\n    super();\r\n  }\r\n\r\n  get portal(): Portal<any> {\r\n    return this._portal;\r\n  }\r\n\r\n  set portal(p: Portal<any>) {\r\n    this._replaceAttachedPortal(p);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dispose();\r\n  }\r\n\r\n  /** Attach the given ComponentPortal to this PortalHost using the ComponentFactoryResolver. */\r\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\r\n    portal.setAttachedHost(this);\r\n\r\n    // If the portal specifies an origin, use that as the logical location of the component\r\n    // in the application tree. Otherwise use the location of this PortalHost.\r\n    let viewContainerRef = portal.viewContainerRef != null ?\r\n        portal.viewContainerRef :\r\n        this._viewContainerRef;\r\n\r\n    let componentFactory =\r\n        this._componentFactoryResolver.resolveComponentFactory(portal.component);\r\n    let ref = viewContainerRef.createComponent(\r\n        componentFactory, viewContainerRef.length,\r\n        portal.injector || viewContainerRef.parentInjector);\r\n\r\n    this.setDisposeFn(() => ref.destroy());\r\n    return ref;\r\n  }\r\n\r\n  /** Attach the given TemplatePortal to this PortlHost as an embedded View. */\r\n  attachTemplatePortal(portal: TemplatePortal): Map<string, any> {\r\n    portal.setAttachedHost(this);\r\n\r\n    this._viewContainerRef.createEmbeddedView(portal.templateRef);\r\n    this.setDisposeFn(() => this._viewContainerRef.clear());\r\n\r\n    // TODO(jelbourn): return locals from view\r\n    return new Map<string, any>();\r\n  }\r\n\r\n  /** Detatches the currently attached Portal (if there is one) and attaches the given Portal. */\r\n  private _replaceAttachedPortal(p: Portal<any>): void {\r\n    if (this.hasAttached()) {\r\n      this.detach();\r\n    }\r\n\r\n    if (p) {\r\n      this.attach(p);\r\n      this._portal = p;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n@NgModule({\r\n  exports: [TemplatePortalDirective, PortalHostDirective],\r\n  declarations: [TemplatePortalDirective, PortalHostDirective],\r\n})\r\nexport class PortalModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: PortalModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n"]}