{"version":3,"sources":["core/portal/portal-errors.ts"],"names":[],"mappings":";;;;;OAAO,EAAC,OAAO,EAAC,MAAM,iBAAiB;AAEvC,0EAA0E;AAC1E;IAAuC,qCAAO;IAC5C;QACI,kBAAM,iCAAiC,CAAC,CAAC;IAC7C,CAAC;IACH,wBAAC;AAAD,CAJA,AAIC,CAJsC,OAAO,GAI7C;AAED,8FAA8F;AAC9F;IAAkD,gDAAO;IACvD;QACI,kBAAM,oCAAoC,CAAC,CAAC;IAChD,CAAC;IACH,mCAAC;AAAD,CAJA,AAIC,CAJiD,OAAO,GAIxD;AAED,uFAAuF;AACvF;IAAsD,oDAAO;IAC3D;QACI,kBAAM,2CAA2C,CAAC,CAAC;IACvD,CAAC;IACH,uCAAC;AAAD,CAJA,AAIC,CAJqD,OAAO,GAI5D;AAED,yEAAyE;AACzE;IAA8C,4CAAO;IACnD;QACI,kBACE,+CAA+C;YAC/C,sEAAsE,CAAC,CAAC;IAC9E,CAAC;IACH,+BAAC;AAAD,CANA,AAMC,CAN6C,OAAO,GAMpD;AAED,0EAA0E;AAC1E;IAA2C,yCAAO;IAChD;QACI,kBAAM,oDAAoD,CAAC,CAAC;IAChE,CAAC;IACH,4BAAC;AAAD,CAJA,AAIC,CAJ0C,OAAO,GAIjD;AAED,gFAAgF;AAChF;IAA6C,2CAAO;IAClD;QACI,kBAAM,8DAA8D,CAAC,CAAC;IAC1E,CAAC;IACH,8BAAC;AAAD,CAJA,AAIC,CAJ4C,OAAO,GAInD","file":"portal-errors.js","sourcesContent":["import {MdError} from '../errors/error';\r\n\r\n/** Exception thrown when attempting to attach a null portal to a host. */\r\nexport class MdNullPortalError extends MdError {\r\n  constructor() {\r\n      super('Must provide a portal to attach');\r\n  }\r\n}\r\n\r\n/** Exception thrown when attempting to attach a portal to a host that is already attached. */\r\nexport class MdPortalAlreadyAttachedError extends MdError {\r\n  constructor() {\r\n      super('Host already has a portal attached');\r\n  }\r\n}\r\n\r\n/** Exception thrown when attempting to attach a portal to an already-disposed host. */\r\nexport class MdPortalHostAlreadyDisposedError extends MdError {\r\n  constructor() {\r\n      super('This PortalHost has already been disposed');\r\n  }\r\n}\r\n\r\n/** Exception thrown when attempting to attach an unknown portal type. */\r\nexport class MdUnknownPortalTypeError extends MdError {\r\n  constructor() {\r\n      super(\r\n        'Attempting to attach an unknown Portal type. ' +\r\n        'BasePortalHost accepts either a ComponentPortal or a TemplatePortal.');\r\n  }\r\n}\r\n\r\n/** Exception thrown when attempting to attach a portal to a null host. */\r\nexport class MdNullPortalHostError extends MdError {\r\n  constructor() {\r\n      super('Attempting to attach a portal to a null PortalHost');\r\n  }\r\n}\r\n\r\n/** Exception thrown when attempting to detach a portal that is not attached. */\r\nexport class MdNoPortalAttachedError extends MdError {\r\n  constructor() {\r\n      super('Attempting to detach a portal that is not attached to a host');\r\n  }\r\n}\r\n"]}