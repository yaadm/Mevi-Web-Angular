{"version":3,"sources":["core/ripple/ripple.ts"],"names":[],"mappings":"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","file":"ripple.js","sourcesContent":["import {\r\n  NgModule,\r\n  ModuleWithProviders,\r\n  Directive,\r\n  ElementRef,\r\n  HostBinding,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChange,\r\n} from '@angular/core';\r\nimport {\r\n  RippleRenderer,\r\n  ForegroundRipple,\r\n  ForegroundRippleState,\r\n} from './ripple-renderer';\r\n\r\n\r\n@Directive({\r\n  selector: '[md-ripple]',\r\n})\r\nexport class MdRipple implements OnInit, OnDestroy, OnChanges {\r\n  /**\r\n   * The element that triggers the ripple when click events are received. Defaults to the\r\n   * directive's host element.\r\n   */\r\n  // Prevent TS metadata emit from referencing HTMLElement in ripple.js\r\n  // That breaks tests running in node that load material components.\r\n  @Input('md-ripple-trigger') trigger: HTMLElement|HTMLElement;\r\n  /**\r\n   * Whether the ripple always originates from the center of the host element's bounds, rather\r\n   * than originating from the location of the click event.\r\n   */\r\n  @Input('md-ripple-centered') centered: boolean;\r\n  /**\r\n   * Whether click events will not trigger the ripple. It can still be triggered by manually\r\n   * calling start() and end().\r\n   */\r\n  @Input('md-ripple-disabled') disabled: boolean;\r\n  /**\r\n   * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\r\n   * will be the distance from the center of the ripple to the furthest corner of the host element's\r\n   * bounding rectangle.\r\n   */\r\n  @Input('md-ripple-max-radius') maxRadius: number = 0;\r\n  /**\r\n   * If set, the normal duration of ripple animations is divided by this value. For example,\r\n   * setting it to 0.5 will cause the animations to take twice as long.\r\n   */\r\n  @Input('md-ripple-speed-factor') speedFactor: number = 1;\r\n  /** Custom color for ripples. */\r\n  @Input('md-ripple-color') color: string;\r\n  /** Custom color for the ripple background. */\r\n  @Input('md-ripple-background-color') backgroundColor: string;\r\n\r\n  /** Whether the ripple background will be highlighted to indicated a focused state. */\r\n  @HostBinding('class.md-ripple-focused') @Input('md-ripple-focused') focused: boolean;\r\n  /** Whether foreground ripples should be visible outside the component's bounds. */\r\n  @HostBinding('class.md-ripple-unbounded') @Input('md-ripple-unbounded') unbounded: boolean;\r\n\r\n  private _rippleRenderer: RippleRenderer;\r\n\r\n  constructor(_elementRef: ElementRef) {\r\n    // These event handlers are attached to the element that triggers the ripple animations.\r\n    const eventHandlers = new Map<string, (e: Event) => void>();\r\n    eventHandlers.set('mousedown', (event: MouseEvent) => this._mouseDown(event));\r\n    eventHandlers.set('click', (event: MouseEvent) => this._click(event));\r\n    eventHandlers.set('mouseleave', (event: MouseEvent) => this._mouseLeave(event));\r\n    this._rippleRenderer = new RippleRenderer(_elementRef, eventHandlers);\r\n  }\r\n\r\n  /** TODO: internal */\r\n  ngOnInit() {\r\n    // If no trigger element was explicity set, use the host element\r\n    if (!this.trigger) {\r\n      this._rippleRenderer.setTriggerElementToHost();\r\n    }\r\n  }\r\n\r\n  /** TODO: internal */\r\n  ngOnDestroy() {\r\n    // Remove event listeners on the trigger element.\r\n    this._rippleRenderer.clearTriggerElement();\r\n  }\r\n\r\n  /** TODO: internal */\r\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n    // If the trigger element changed (or is being initially set), add event listeners to it.\r\n    const changedInputs = Object.keys(changes);\r\n    if (changedInputs.indexOf('trigger') !== -1) {\r\n      this._rippleRenderer.setTriggerElement(this.trigger);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Responds to the start of a ripple animation trigger by fading the background in.\r\n   */\r\n  start() {\r\n    this._rippleRenderer.fadeInRippleBackground(this.backgroundColor);\r\n  }\r\n\r\n  /**\r\n   * Responds to the end of a ripple animation trigger by fading the background out, and creating a\r\n   * foreground ripple that expands from the event location (or from the center of the element if\r\n   * the \"centered\" property is set or forceCenter is true).\r\n   */\r\n  end(left: number, top: number, forceCenter = true) {\r\n    this._rippleRenderer.createForegroundRipple(\r\n      left,\r\n      top,\r\n      this.color,\r\n      this.centered || forceCenter,\r\n      this.maxRadius,\r\n      this.speedFactor,\r\n      (ripple: ForegroundRipple, e: TransitionEvent) => this._rippleTransitionEnded(ripple, e));\r\n    this._rippleRenderer.fadeOutRippleBackground();\r\n  }\r\n\r\n  private _rippleTransitionEnded(ripple: ForegroundRipple, event: TransitionEvent) {\r\n    if (event.propertyName === 'opacity') {\r\n      // If the ripple finished expanding, start fading it out. If it finished fading out,\r\n      // remove it from the DOM.\r\n      switch (ripple.state) {\r\n        case ForegroundRippleState.EXPANDING:\r\n          this._rippleRenderer.fadeOutForegroundRipple(ripple.rippleElement);\r\n          ripple.state = ForegroundRippleState.FADING_OUT;\r\n          break;\r\n        case ForegroundRippleState.FADING_OUT:\r\n          this._rippleRenderer.removeRippleFromDom(ripple.rippleElement);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the trigger element receives a mousedown event. Starts the ripple animation by\r\n   * fading in the background.\r\n   */\r\n  private _mouseDown(event: MouseEvent) {\r\n    if (!this.disabled && event.button === 0) {\r\n      this.start();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the trigger element receives a click event. Creates a foreground ripple and\r\n   * runs its animation.\r\n   */\r\n  private _click(event: MouseEvent) {\r\n    if (!this.disabled && event.button === 0) {\r\n      // If screen and page positions are all 0, this was probably triggered by a keypress.\r\n      // In that case, use the center of the bounding rect as the ripple origin.\r\n      // FIXME: This fails on IE11, which still sets pageX/Y and screenX/Y on keyboard clicks.\r\n      const isKeyEvent =\r\n          (event.screenX === 0 && event.screenY === 0 && event.pageX === 0 && event.pageY === 0);\r\n      this.end(event.pageX, event.pageY, isKeyEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the trigger element receives a mouseleave event. Fades out the background.\r\n   */\r\n  private _mouseLeave(event: MouseEvent) {\r\n    // We can always fade out the background here; It's a no-op if it was already inactive.\r\n    this._rippleRenderer.fadeOutRippleBackground();\r\n  }\r\n\r\n  // TODO: Reactivate the background div if the user drags out and back in.\r\n}\r\n\r\n\r\n@NgModule({\r\n  exports: [MdRipple],\r\n  declarations: [MdRipple],\r\n})\r\nexport class MdRippleModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: MdRippleModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n"]}