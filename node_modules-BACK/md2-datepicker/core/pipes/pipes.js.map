{"version":3,"sources":["core/pipes/pipes.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EACL,IAAI,EAEL,MAAM,eAAe;AAGtB;IAAA;IAoBA,CAAC;IAnBC;;;;;OAKG;IACH,iCAAS,GAAT,UAAU,KAAa,EAAE,KAAa;QACpC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QAAC,CAAC;QACvC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,mCAAmC,CAAC,GAAG,KAAK,CAAC;IACxH,CAAC;IAED;;;;OAIG;IACK,oCAAY,GAApB,UAAqB,aAAqB;QACxC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAC;IACjE,CAAC;IApBH;QAAC,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;;qBAAA;IAqB5B,oBAAC;AAAD,CApBA,AAoBC,IAAA","file":"pipes.js","sourcesContent":["import {\r\n  Pipe,\r\n  PipeTransform\r\n} from '@angular/core';\r\n\r\n@Pipe({ name: 'highlight' })\r\nexport class HighlightPipe implements PipeTransform {\r\n  /**\r\n   * Transform function\r\n   * @param value string\r\n   * @param query string filter value\r\n   * @return filtered string with markup\r\n   */\r\n  transform(value: string, query: string) {\r\n    if (query.length < 1) { return value; }\r\n    return query ? value.replace(new RegExp(this.escapeRegexp(query), 'gi'), '<span class=\"highlight\">$&</span>') : value;\r\n  }\r\n\r\n  /**\r\n   * filter pipe\r\n   * @param queryToEscape\r\n   * @return queryToEscape with replace string\r\n   */\r\n  private escapeRegexp(queryToEscape: string) {\r\n    return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\r\n  }\r\n}\r\n"]}