{"version":3,"sources":["core/overlay/overlay-directives.ts"],"names":[],"mappings":"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","file":"overlay-directives.js","sourcesContent":["import {\r\n    NgModule,\r\n    ModuleWithProviders,\r\n    Directive,\r\n    EventEmitter,\r\n    TemplateRef,\r\n    ViewContainerRef,\r\n    Optional,\r\n    Input,\r\n    OnDestroy,\r\n    Output,\r\n    ElementRef\r\n} from '@angular/core';\r\nimport {Overlay, OVERLAY_PROVIDERS} from './overlay';\r\nimport {OverlayRef} from './overlay-ref';\r\nimport {TemplatePortal} from '../portal/portal';\r\nimport {OverlayState} from './overlay-state';\r\nimport {ConnectionPositionPair} from './position/connected-position';\r\nimport {PortalModule} from '../portal/portal-directives';\r\nimport {ConnectedPositionStrategy} from './position/connected-position-strategy';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {Dir, LayoutDirection} from '../rtl/dir';\r\n\r\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\r\nlet defaultPositionList = [\r\n  new ConnectionPositionPair(\r\n      {originX: 'start', originY: 'bottom'},\r\n      {overlayX: 'start', overlayY: 'top'}),\r\n  new ConnectionPositionPair(\r\n      {originX: 'start', originY: 'top'},\r\n      {overlayX: 'start', overlayY: 'bottom'}),\r\n];\r\n\r\n\r\n/**\r\n * Directive applied to an element to make it usable as an origin for an Overlay using a\r\n * ConnectedPositionStrategy.\r\n */\r\n@Directive({\r\n  selector: '[overlay-origin]',\r\n  exportAs: 'overlayOrigin',\r\n})\r\nexport class OverlayOrigin {\r\n  constructor(private _elementRef: ElementRef) { }\r\n\r\n  get elementRef() {\r\n    return this._elementRef;\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Directive to facilitate declarative creation of an Overlay using a ConnectedPositionStrategy.\r\n */\r\n@Directive({\r\n  selector: '[connected-overlay]',\r\n  exportAs: 'connectedOverlay'\r\n})\r\nexport class ConnectedOverlayDirective implements OnDestroy {\r\n  private _overlayRef: OverlayRef;\r\n  private _templatePortal: TemplatePortal;\r\n  private _open = false;\r\n  private _hasBackdrop = false;\r\n  private _backdropSubscription: Subscription;\r\n\r\n  @Input() origin: OverlayOrigin;\r\n  @Input() positions: ConnectionPositionPair[];\r\n\r\n  /** The offset in pixels for the overlay connection point on the x-axis */\r\n  @Input() offsetX: number = 0;\r\n\r\n  /** The offset in pixels for the overlay connection point on the y-axis */\r\n  @Input() offsetY: number = 0;\r\n\r\n  /** The width of the overlay panel. */\r\n  @Input() width: number | string;\r\n\r\n  /** The height of the overlay panel. */\r\n  @Input() height: number | string;\r\n\r\n  /** The custom class to be set on the backdrop element. */\r\n  @Input() backdropClass: string;\r\n\r\n  /** Whether or not the overlay should attach a backdrop. */\r\n  @Input()\r\n  get hasBackdrop() {\r\n    return this._hasBackdrop;\r\n  }\r\n\r\n  // TODO: move the boolean coercion logic to a shared function in core\r\n  set hasBackdrop(value: any) {\r\n    this._hasBackdrop = value != null && `${value}` !== 'false';\r\n  }\r\n\r\n  @Input()\r\n  get open() {\r\n    return this._open;\r\n  }\r\n\r\n  set open(value: boolean) {\r\n    value ? this._attachOverlay() : this._detachOverlay();\r\n    this._open = value;\r\n  }\r\n\r\n  /** Event emitted when the backdrop is clicked. */\r\n  @Output() backdropClick = new EventEmitter<void>();\r\n\r\n  // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\r\n\r\n  constructor(\r\n      private _overlay: Overlay,\r\n      templateRef: TemplateRef<any>,\r\n      viewContainerRef: ViewContainerRef,\r\n      @Optional() private _dir: Dir) {\r\n    this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\r\n  }\r\n\r\n  get overlayRef(): OverlayRef {\r\n    return this._overlayRef;\r\n  }\r\n\r\n  get dir(): LayoutDirection {\r\n    return this._dir ? this._dir.value : 'ltr';\r\n  }\r\n\r\n  /** TODO: internal */\r\n  ngOnDestroy() {\r\n    this._destroyOverlay();\r\n  }\r\n\r\n  /** Creates an overlay */\r\n  private _createOverlay() {\r\n    if (!this.positions || !this.positions.length) {\r\n      this.positions = defaultPositionList;\r\n    }\r\n\r\n    this._overlayRef = this._overlay.create(this._buildConfig());\r\n  }\r\n\r\n  /** Builds the overlay config based on the directive's inputs */\r\n  private _buildConfig(): OverlayState {\r\n    let overlayConfig = new OverlayState();\r\n\r\n    if (this.width || this.width === 0) {\r\n      overlayConfig.width = this.width;\r\n    }\r\n\r\n    if (this.height || this.height === 0) {\r\n      overlayConfig.height = this.height;\r\n    }\r\n\r\n    overlayConfig.hasBackdrop = this.hasBackdrop;\r\n\r\n    if (this.backdropClass) {\r\n      overlayConfig.backdropClass = this.backdropClass;\r\n    }\r\n\r\n    overlayConfig.positionStrategy = this._createPositionStrategy();\r\n\r\n    overlayConfig.direction = this.dir;\r\n\r\n    return overlayConfig;\r\n  }\r\n\r\n  /** Returns the position strategy of the overlay to be set on the overlay config */\r\n  private _createPositionStrategy(): ConnectedPositionStrategy {\r\n    const pos = this.positions[0];\r\n    const originPoint = {originX: pos.originX, originY: pos.originY};\r\n    const overlayPoint = {overlayX: pos.overlayX, overlayY: pos.overlayY};\r\n\r\n    return this._overlay.position()\r\n      .connectedTo(this.origin.elementRef, originPoint, overlayPoint)\r\n      .withDirection(this.dir)\r\n      .withOffsetX(this.offsetX)\r\n      .withOffsetY(this.offsetY);\r\n  }\r\n\r\n  /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\r\n  private _attachOverlay() {\r\n    if (!this._overlayRef) {\r\n      this._createOverlay();\r\n    }\r\n\r\n    if (!this._overlayRef.hasAttached()) {\r\n      this._overlayRef.attach(this._templatePortal);\r\n    }\r\n\r\n    if (this.hasBackdrop) {\r\n      this._backdropSubscription = this._overlayRef.backdropClick().subscribe(() => {\r\n        this.backdropClick.emit();\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\r\n  private _detachOverlay() {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.detach();\r\n    }\r\n\r\n    if (this._backdropSubscription) {\r\n      this._backdropSubscription.unsubscribe();\r\n      this._backdropSubscription = null;\r\n    }\r\n  }\r\n\r\n  /** Destroys the overlay created by this directive. */\r\n  private _destroyOverlay() {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.dispose();\r\n    }\r\n\r\n    if (this._backdropSubscription) {\r\n      this._backdropSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n@NgModule({\r\n  imports: [PortalModule],\r\n  exports: [ConnectedOverlayDirective, OverlayOrigin],\r\n  declarations: [ConnectedOverlayDirective, OverlayOrigin],\r\n})\r\nexport class OverlayModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: OverlayModule,\r\n      providers: OVERLAY_PROVIDERS,\r\n    };\r\n  }\r\n}\r\n"]}