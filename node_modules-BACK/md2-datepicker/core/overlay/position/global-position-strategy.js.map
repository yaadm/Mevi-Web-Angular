{"version":3,"sources":["core/overlay/position/global-position-strategy.ts"],"names":[],"mappings":"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","file":"global-position-strategy.js","sourcesContent":["import {applyCssTransform} from '../../style/apply-transform';\r\nimport {PositionStrategy} from './position-strategy';\r\n\r\n\r\n/**\r\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\r\n * explicit position relative to the browser's viewport.\r\n */\r\nexport class GlobalPositionStrategy implements PositionStrategy {\r\n  private _cssPosition: string = 'absolute';\r\n  private _top: string = '';\r\n  private _bottom: string = '';\r\n  private _left: string = '';\r\n  private _right: string = '';\r\n\r\n  /** Array of individual applications of translateX(). Currently only for centering. */\r\n  private _translateX: string[] = [];\r\n\r\n  /** Array of individual applications of translateY(). Currently only for centering. */\r\n  private _translateY: string[] = [];\r\n\r\n  /** Sets the element to use CSS position: fixed */\r\n  fixed() {\r\n    this._cssPosition = 'fixed';\r\n    return this;\r\n  }\r\n\r\n  /** Sets the element to use CSS position: absolute. This is the default. */\r\n  absolute() {\r\n    this._cssPosition = 'absolute';\r\n    return this;\r\n  }\r\n\r\n  /** Sets the top position of the overlay. Clears any previously set vertical position. */\r\n  top(value: string) {\r\n    this._bottom = '';\r\n    this._translateY = [];\r\n    this._top = value;\r\n    return this;\r\n  }\r\n\r\n  /** Sets the left position of the overlay. Clears any previously set horizontal position. */\r\n  left(value: string) {\r\n    this._right = '';\r\n    this._translateX = [];\r\n    this._left = value;\r\n    return this;\r\n  }\r\n\r\n  /** Sets the bottom position of the overlay. Clears any previously set vertical position. */\r\n  bottom(value: string) {\r\n    this._top = '';\r\n    this._translateY = [];\r\n    this._bottom = value;\r\n    return this;\r\n  }\r\n\r\n  /** Sets the right position of the overlay. Clears any previously set horizontal position. */\r\n  right(value: string) {\r\n    this._left = '';\r\n    this._translateX = [];\r\n    this._right = value;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Centers the overlay horizontally with an optional offset.\r\n   * Clears any previously set horizontal position.\r\n   */\r\n  centerHorizontally(offset = '0px') {\r\n    this._left = '50%';\r\n    this._right = '';\r\n    this._translateX = ['-50%', offset];\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Centers the overlay vertically with an optional offset.\r\n   * Clears any previously set vertical position.\r\n   */\r\n  centerVertically(offset = '0px') {\r\n    this._top = '50%';\r\n    this._bottom = '';\r\n    this._translateY = ['-50%', offset];\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Apply the position to the element.\r\n   * TODO: internal\r\n   */\r\n  apply(element: HTMLElement): Promise<void> {\r\n    element.style.position = this._cssPosition;\r\n    element.style.top = this._top;\r\n    element.style.left = this._left;\r\n    element.style.bottom = this._bottom;\r\n    element.style.right = this._right;\r\n\r\n    // TODO(jelbourn): we don't want to always overwrite the transform property here,\r\n    // because it will need to be used for animations.\r\n    let tranlateX = this._reduceTranslateValues('translateX', this._translateX);\r\n    let translateY = this._reduceTranslateValues('translateY', this._translateY);\r\n\r\n    applyCssTransform(element, `${tranlateX} ${translateY}`);\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  /** Reduce a list of translate values to a string that can be used in the transform property */\r\n  private _reduceTranslateValues(translateFn: string, values: string[]) {\r\n    return values.map(t => `${translateFn}(${t})`).join(' ');\r\n  }\r\n}\r\n"]}